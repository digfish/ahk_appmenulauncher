; Generated by Auto-GUI 3.0.1
; FIXME
; The assigning of icons to the image list is chaotic, can't understand how the list is being fetched, sometimes
; says 0 other times
; Maintain the order of insertion when a new item is added by drag'n'drop (apeend to the end of array)
#SingleInstance Force
#NoEnv
#Include <JSON>
SetWorkingDir %A_ScriptDir%
SetBatchLines -1
FilenameTitleMap := Array()
TitleFilenameMap := Array()
Titles := Array()
Filenames := Array()

Menu, Tray, Icon, app-menu-launcher.ico
Menu, Tray, Add, Show, TrayShowHandler
Menu, Tray, Add, Exit, TrayExitHandler
Menu, Tray, NoStandard  
Menu, Tray, MainWindow
Menu, Tray, Default, Show

Gui Font, s9, Segoe UI
Gui Add, ListView, x0 y0 w2000 h2000 +0x200000 -0x2000 0x2000 -0xA000 +0x20A000 AltSubmit gDndListView vDndListView ,  Name
global iSmallList := IL_Create(10,1,0) ; last argument is for icon size: 0 for small, 1 for big
global iBigList := IL_Create(10,1,1)
LV_SetImageList(iSmallList,1) ; here last argument 1 for small icons, 0 for big
LV_SetImageList(iBigList,0)

; -- add menu

Menu, FileMenu, Add, Save, FileSaveHandler
Menu, FileMenu, Add, SaveJson, FileSaveJsonHandler
Menu, FileMenu, Add, Exit, FileExitHandler

Menu, ViewMenu, Add, Icons, ViewIconsHandler, +Radio
Menu, ViewMenu, Add, List, ViewListHandler, +Radio +Default
Menu, ViewMenu, Add, Tiles, ViewTilesHandler, +Radio


Menu, DndGuiMenu, Add, File, :FileMenu
Menu, DndGuiMenu, Add, View, :ViewMenu
Menu, DndGuiMenu, Add ; separator

Menu, ViewMenu, Default, List

Gui, Menu, DndGuiMenu
Gui, +Resize +0x200000 ; window resizable and with a verticall scroll bar 
Gui Show, w233 h401, DialNDrop Launcher AutoSize

AutoXYWH("DndListView","wh",True)
LoadList()
TrayMenuFiller()

Menu, Tray, Tip, % Filenames.Count() " Items in the menu"

Return

;;;; End of main program

GuiEscape(GuiHwnd) {
    ExitApp
}

GuiClose(GuiHwnd) {
    SaveList()
    ExitApp
}


TrayShowHandler:
   Gui Show
   return

TrayExitHandler:
    SaveList()
    ExitApp

FileSaveJsonHandler:
    global FilenameTitleMap, TitleFilenameMap, Filenames, Titles
    dict := Array()
    For filename,title in FilenameTitleMap {
        newItem := {"exe_path":filename,"title":title, "env_ini":"","tmpicon":""}
        dict[title] := newItem
    }
    jsonStr := JSON.Dump(dict,,"   ")
    jsonFile := FileOpen("launcher.json","w")
    jsonFile.Write(jsonStr)
    jsonFile.Close()
return

FileExitHandler:
    SaveList()
    ExitApp
return

ViewIconsHandler:
    Menu, ViewMenu, Default, Icons
    GUIControl, +Icon, DndListView 
return

ViewListHandler:
    Menu, ViewMenu, Default, List
    GUIControl, +List, DndListView 
return

ViewTilesHandler:
    Menu, ViewMenu, Default, Tiles
    GUIControl, -Icon -List +Tile, DndListView 
return


TrayMenuFiller() {
    global Filenames, TItles
    BoundRunTrayItem := Func("RunTrayItem")
    Menu Tray, Add ; -- separator
    Loop % Filenames.Count() {
        filename := Filenames[A_Index]
        title := Titles[A_Index]
        Menu Tray, Add, %title%,  % BoundRunTrayItem
        Menu Tray, Icon, %title%, %filename%
    }
}

RunTrayItem(ItemName,ItemPos,MenuName) {
    global Filenames
    filename := Filenames[ItemPos]
    Run, %filename%
}

SaveList() {
    global FilenameTitleMap, Filenames, Titles
    i:=1
    Loop % Filenames.Count() {
        filename := Filenames[A_Index]
        title := Titles[A_Index]
        ;LV_GetText(Row, A_Index)
        ;MsgBox %Row%
        IniWrite, %filename%, launcher.ini, launcher, %title%
        i := i + 1
    }
}

LoadList() {
    global FilenameTitleMap
    global TitleFilenameMap
    global Titles
    global Filenames
    global iList
    IniRead, Row, launcher.ini, launcher
    ;i:=1
    static i,j
    Loop, Parse, Row, `n ;
    {    
        
        vals := StrSplit(A_LoopField,"=")
        filename := vals[2]
        title := TitleFromFilename(filename)
        Titles.Push(title)
        Filenames.Push(filename)
        FilenameTitleMap[filename] := title
        TitleFilenameMap[title] := filename
        i := IL_Add(iSmallList,filename,i)
        j := IL_Add(iBigList,filename,j)
        LV_Add("Icon"i,title,i)
        OutputDebug %i% %j%
       ; i := i + 1
    }
;    LV_Add("",Row) 
;    i := IL_Add(iList,Row,i)
;    LV_Add("Icon"i,file)   
}

FileSaveHandler:
    SaveList()
return

MenuHandler:
    MsgBox You selected %A_ThisMenuItem% from the menu %A_ThisMenu%.
return



DndListView:
if (A_GuiEvent = "DoubleClick")
{
    global TitleFilenameMap, Filenames, Titles
    LV_GetText(Title, A_EventInfo)  ; Get the text from the row's first field.
    ;MsgBox %RowText%
    filename := TitleFilenameMap[Title]
    ToolTip, Running "%Title%" : %filename%
    ;SetTimer, RemoveTooltip, -5000      
    Run %filename%
} else if (A_GuiEvent = "D"){
    OutputDebug "Drag and Drop", %A_EventInfo%
} else if (A_GuiEvent = "RightClick") {
    OutputDebug "ContextMenu"
    Menu Context, Add, Edit, EditHandler
    Menu Context, Show
}
else {
    OutputDebug, %A_GuiEvent%, %A_EventInfo%
}
return

EditHandler:
OutputDebug "EditHandler"
return

RemoveTooltip:
ToolTip
Return


;i:= 1 
GuiDropFiles(GuiHwnd, FileArray, CtrlHwnd, X, Y) {
    static i,j
    global TitleFilenameMap, FilenameTitleMap, Titles, Filenames
    for idx,file in FileArray
        ;MsgBox File %i% is:`n%file%
        OutputDebug, %idx%, %file%
        title := TitleFromFilename(file)
        Filenames.Push(file)
        Titles.Push(title)
        TitleFilenameMap[title] := file
        ;FilenameTitleMap[file] := title
        ;FilenameTitleMap.Insert([file,title])
        i := IL_Add(iBigList,file,i)
        j := IL_Add(iSmallList,file,j)
        LV_Add("Icon"i,title,i)   
        ;i:= i+1
}

TitleFromFilename(filename) {
    SplitPath, filename, , , , filenamenoext
    return filenamenoext
}

GuiSize:
    OutputDebug, "GuiSize", %A_EventInfo%, %ErrorLevel%, %A_GuiWidth%, %A_GuiHeight%

; ---- Auxiliary Functions

; =================================================================================
; Function:     AutoXYWH
;   Move and resize control automatically when GUI resized.
; Parameters:
;   ctrl_list  - ControlID list separated by "|".
;                ControlID can be a control HWND, associated variable name or ClassNN.
;   Attributes - Can be one or more of x/y/w/h  followed by fractions
;   Redraw     - True to redraw controls
; Examples:
;   AutoXYWH("Btn1|Btn2", "xy")
;   AutoXYWH(hEdit      , "w0.5 h0.75")
; ---------------------------------------------------------------------------------
; Release date: 2014-6-25           http://ahkscript.org/boards/viewtopic.php?t=1079
; Author      : tmplinshi (mod by toralf)
; requires AHK version : 1.1.13.01+
; =================================================================================
AutoXYWH(ctrl_list, Attributes="wh", Redraw = False){
    static cInfo := {}
    Loop, Parse, ctrl_list, |
    {
        ctrl := A_Gui ":" A_LoopField
        If ( cInfo[ctrl].x = "" ){
            GuiControlGet, i, %A_Gui%:Pos, %A_LoopField%
            a := RegExReplace(Attributes, "i)[^xywh]")  
            fx := fy := fw := fh := 0
            Loop, Parse, a
                If !RegExMatch(Attributes, "i)" A_LoopField "\s*\K[\d.-]+", f%A_LoopField%)
                  f%A_LoopField% := 1
            cInfo[ctrl] := { x:ix, fx:fx, y:iy, fy:fy, w:iw, fw:fw, h:ih, fh:fh, gw:A_GuiWidth, gh:A_GuiHeight, a:StrSplit(a) }
        }Else If ( cInfo[ctrl].a.1) {
            x := (A_GuiWidth  - cInfo[ctrl].gw) * cInfo[ctrl].fx + cInfo[ctrl].x
            y := (A_GuiHeight - cInfo[ctrl].gh) * cInfo[ctrl].fy + cInfo[ctrl].y
            w := (A_GuiWidth  - cInfo[ctrl].gw) * cInfo[ctrl].fw + cInfo[ctrl].w
            h := (A_GuiHeight - cInfo[ctrl].gh) * cInfo[ctrl].fh + cInfo[ctrl].h
            For i, a in cInfo[ctrl]["a"]
                Options .= a %a% A_Space
            GuiControl, % A_Gui ":" (Redraw ? "MoveDraw" : "Move"), % A_LoopField, % Options
        }
    }
}